When would you want to use a remote repository rather than keeping all
your work local?

	Its better to store the files on the cloud to be easy to collaborate 
	with others and also for the self to easily access the files from 
	any computer.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

	Again automatic syncing might end up in broken code and can manifest 
	bizarre situations. To avoid that, its better to manually sync the 
	files as we better know when to pull.

Describe the differences between forks, clones, and branches. When would
you use one instead of another?

	Branching is on the same repository, like different paths to a 
	project. Cloning is making a copy of the entire history of commits of
	a repository either on the same machine or a remote one. Cloning on
	github server is known as fork.	

What is the benefit of having a copy of the last known state of the
remote stored locally?

	It works like an offline copy of the last synced commit which is 
	useful in case we are offline and want to keep a track of how long
	we have moved ahead of the online repository.

How would you collaborate without using Git or GitHub? What would be
easier, and what would be harder?

	We could be making different parts of the project separately and then
	combining them manually, but it would be extremely hard to piece 
	everything together. Git or GitHub is definitely the easy choice for 
	collaboration.

When would you want to make changes in a separate branch rather than
directly in master? What benefits does each approach have?

	Trying an altogether new functionality can be a case when we add a 
	separate branch otherwise we can directly make the changes in master
	which is way less complicated.	